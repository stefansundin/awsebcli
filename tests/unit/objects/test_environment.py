# Copyright 2014 Amazon.com, Inc. or its affiliates. All Rights Reserved.
#
# Licensed under the Apache License, Version 2.0 (the "License"). You
# may not use this file except in compliance with the License. A copy of
# the License is located at
#
# http://aws.amazon.com/apache2.0/
#
# or in the "license" file accompanying this file. This file is
# distributed on an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF
# ANY KIND, either express or implied. See the License for the specific
# language governing permissions and limitations under the License.

import unittest

from ebcli.objects import environmentsettings


class TestEnvironment(unittest.TestCase):
    def setUp(self):
        pass

    #  Test gets invalidated every time we remove a section
    # def test_convert_api_to_usr_model(self):
    #     example_api_response = get_example_api_response()
    #     expected_conversion_result = get_expected_conversion()
    #     result = configuration.convert_api_to_usr_model(example_api_response)
    #
    #     self.assertEqual(result, expected_conversion_result)

    def test_collect_changes(self):
        return
        example_api_response = get_example_api_response()
        example_usr_model = get_expected_conversion()

        # do a change
        example_usr_model['settings']['aws:autoscaling:asg']['MinSize'] = '3'
        example_usr_model['settings']['aws:autoscaling:asg']['MaxSize'] = '6'
        example_usr_model['settings']['aws:autoscaling:launchconfiguration']['EC2KeyName'] = None

        # compare results
        changes, remove = environmentsettings.collect_changes(example_api_response, example_usr_model)

        self.assertEqual(len(changes), 2)
        self.assertEqual(len(remove), 1)


def get_example_api_response():
    return {u'ApplicationName': 'myEBCLItest',
            u'EnvironmentName': 'myAwesomeEnv2',
            u'Description': 'TemplatePack for environment: myAwesomeEnv2',
            u'DeploymentStatus': 'deployed',
            u'DateCreated': '2014-08-13T23:01:49Z', u'OptionSettings': [
        {u'OptionName': 'AWS_SECRET_KEY',
         u'Namespace': 'aws:elasticbeanstalk:application:environment',
         u'Value': None}, {u'OptionName': 'AppSource',
                           u'Namespace': 'aws:cloudformation:template:parameter',
                           u'Value': 'http://elasticbeanstalk-samples-us-west-2.s3.amazonaws.com/elasticbeanstalk-sampleapp.war'},
        {u'OptionName': 'Xmx',
         u'Namespace': 'aws:elasticbeanstalk:container:tomcat:jvmoptions',
         u'Value': '256m'}, {u'OptionName': 'AWS_ACCESS_KEY_ID',
                             u'Namespace': 'aws:elasticbeanstalk:application:environment',
                             u'Value': None}, {u'OptionName': 'JVM Options',
                                               u'Namespace': 'aws:elasticbeanstalk:container:tomcat:jvmoptions',
                                               u'Value': None},
        {u'OptionName': 'JVMOptions',
         u'Namespace': 'aws:cloudformation:template:parameter',
         u'Value': 'Xms=256m,Xmx=256m,XX:MaxPermSize=64m,JVM Options='},
        {u'OptionName': 'PARAM1',
         u'Namespace': 'aws:elasticbeanstalk:application:environment',
         u'Value': None}, {u'OptionName': 'PARAM2',
                           u'Namespace': 'aws:elasticbeanstalk:application:environment',
                           u'Value': None}, {u'OptionName': 'InstancePort',
                                             u'Namespace': 'aws:cloudformation:template:parameter',
                                             u'Value': '80'},
        {u'OptionName': 'PARAM4',
         u'Namespace': 'aws:elasticbeanstalk:application:environment',
         u'Value': None}, {u'OptionName': 'PARAM3',
                           u'Namespace': 'aws:elasticbeanstalk:application:environment',
                           u'Value': None},
        {u'OptionName': 'EnvironmentVariables',
         u'Namespace': 'aws:cloudformation:template:parameter',
         u'Value': 'AWS_ACCESS_KEY_ID=,AWS_SECRET_KEY=,JDBC_CONNECTION_STRING=,PARAM1=,PARAM2=,PARAM3=,PARAM4=,PARAM5='},
        {u'OptionName': 'PARAM5',
         u'Namespace': 'aws:elasticbeanstalk:application:environment',
         u'Value': None}, {u'OptionName': 'LogPublicationControl',
                           u'Namespace': 'aws:elasticbeanstalk:hostmanager',
                           u'Value': 'false'},
        {u'OptionName': 'XX:MaxPermSize',
         u'Namespace': 'aws:elasticbeanstalk:container:tomcat:jvmoptions',
         u'Value': '64m'}, {u'OptionName': 'Xms',
                            u'Namespace': 'aws:elasticbeanstalk:container:tomcat:jvmoptions',
                            u'Value': '256m'}, {u'OptionName': 'InstanceType',
                                                u'Namespace': 'aws:autoscaling:launchconfiguration',
                                                u'Value': 't1.micro'},
        {u'OptionName': 'JDBC_CONNECTION_STRING',
         u'Namespace': 'aws:elasticbeanstalk:application:environment',
         u'Value': None},
        {u'OptionName': 'Interval', u'Namespace': 'aws:elb:healthcheck',
         u'Value': '30'}, {u'OptionName': 'LoadBalancerHTTPSPort',
                           u'Namespace': 'aws:elb:loadbalancer',
                           u'Value': 'OFF'},
        {u'OptionName': 'Timeout', u'Namespace': 'aws:elb:healthcheck',
         u'Value': '5'},
        {u'OptionName': 'CrossZone', u'Namespace': 'aws:elb:loadbalancer',
         u'Value': 'false'}, {u'OptionName': 'SSLCertificateId',
                              u'Namespace': 'aws:elb:loadbalancer'},
        {u'OptionName': 'UnhealthyThreshold',
         u'Namespace': 'aws:elb:healthcheck', u'Value': '5'},
        {u'OptionName': 'ELBSubnets', u'Namespace': 'aws:ec2:vpc'},
        {u'OptionName': 'Stickiness Policy', u'Namespace': 'aws:elb:policies',
         u'Value': 'false'}, {u'OptionName': 'ConnectionDrainingTimeout',
                              u'Namespace': 'aws:elb:policies',
                              u'Value': '20'},
        {u'OptionName': 'LoadBalancerPortProtocol',
         u'Namespace': 'aws:elb:loadbalancer', u'Value': 'HTTP'},
        {u'OptionName': 'LoadBalancerSSLPortProtocol',
         u'Namespace': 'aws:elb:loadbalancer', u'Value': 'HTTPS'},
        {u'OptionName': 'Target', u'Namespace': 'aws:elb:healthcheck',
         u'Value': 'TCP:80'}, {u'OptionName': 'Stickiness Cookie Expiration',
                               u'Namespace': 'aws:elb:policies',
                               u'Value': '0'},
        {u'OptionName': 'HealthyThreshold',
         u'Namespace': 'aws:elb:healthcheck', u'Value': '3'},
        {u'OptionName': 'ConnectionDrainingEnabled',
         u'Namespace': 'aws:elb:policies', u'Value': 'false'},
        {u'OptionName': 'ELBScheme', u'Namespace': 'aws:ec2:vpc',
         u'Value': 'public'}, {u'OptionName': 'LoadBalancerHTTPPort',
                               u'Namespace': 'aws:elb:loadbalancer',
                               u'Value': '80'}, {u'OptionName': 'ImageId',
                                                 u'Namespace': 'aws:autoscaling:launchconfiguration',
                                                 u'Value': 'ami-043a5034'},
        {u'OptionName': 'MonitoringInterval',
         u'Namespace': 'aws:autoscaling:launchconfiguration',
         u'Value': '5 minute'}, {u'OptionName': 'SecurityGroups',
                                 u'Namespace': 'aws:autoscaling:launchconfiguration',
                                 u'Value': 'awseb-e-y3vcqpgpfy-stack-AWSEBSecurityGroup-1S1L8EML44LY8'},
        {u'OptionName': 'EC2KeyName',
         u'Namespace': 'aws:autoscaling:launchconfiguration',
         u'Value': 'amazon'}, {u'OptionName': 'IamInstanceProfile',
                                       u'Namespace': 'aws:autoscaling:launchconfiguration'},
        {u'OptionName': 'BlockDeviceMappings',
         u'Namespace': 'aws:autoscaling:launchconfiguration'},
        {u'OptionName': 'AssociatePublicIpAddress',
         u'Namespace': 'aws:ec2:vpc'},
        {u'OptionName': 'MaxSize', u'Namespace': 'aws:autoscaling:asg',
         u'Value': '4'},
        {u'OptionName': 'Cooldown', u'Namespace': 'aws:autoscaling:asg',
         u'Value': '360'},
        {u'OptionName': 'MinSize', u'Namespace': 'aws:autoscaling:asg',
         u'Value': '1'}, {u'OptionName': 'Availability Zones',
                          u'Namespace': 'aws:autoscaling:asg',
                          u'Value': 'Any'},
        {u'OptionName': 'MinInstancesInService',
         u'Namespace': 'aws:autoscaling:updatepolicy:rollingupdate'},
        {u'OptionName': 'RollingUpdateEnabled',
         u'Namespace': 'aws:autoscaling:updatepolicy:rollingupdate',
         u'Value': 'false'}, {u'OptionName': 'Custom Availability Zones',
                              u'Namespace': 'aws:autoscaling:asg',
                              u'Value': None},
        {u'OptionName': 'Subnets', u'Namespace': 'aws:ec2:vpc'},
        {u'OptionName': 'MaxBatchSize',
         u'Namespace': 'aws:autoscaling:updatepolicy:rollingupdate'},
        {u'OptionName': 'PauseTime',
         u'Namespace': 'aws:autoscaling:updatepolicy:rollingupdate'},
        {u'OptionName': 'VPCId', u'Namespace': 'aws:ec2:vpc'},
        {u'OptionName': 'UpperThreshold',
         u'Namespace': 'aws:autoscaling:trigger', u'Value': '6000000'},
        {u'OptionName': 'Period', u'Namespace': 'aws:autoscaling:trigger',
         u'Value': '5'},
        {u'OptionName': 'Statistic', u'Namespace': 'aws:autoscaling:trigger',
         u'Value': 'Average'},
        {u'OptionName': 'MeasureName', u'Namespace': 'aws:autoscaling:trigger',
         u'Value': 'NetworkOut'}, {u'OptionName': 'LowerThreshold',
                                   u'Namespace': 'aws:autoscaling:trigger',
                                   u'Value': '2000000'},
        {u'OptionName': 'EvaluationPeriods',
         u'Namespace': 'aws:autoscaling:trigger', u'Value': '1'},
        {u'OptionName': 'BreachDuration',
         u'Namespace': 'aws:autoscaling:trigger', u'Value': '5'},
        {u'OptionName': 'Unit', u'Namespace': 'aws:autoscaling:trigger',
         u'Value': 'Bytes'}, {u'OptionName': 'LowerBreachScaleIncrement',
                              u'Namespace': 'aws:autoscaling:trigger',
                              u'Value': '-1'},
        {u'OptionName': 'UpperBreachScaleIncrement',
         u'Namespace': 'aws:autoscaling:trigger', u'Value': '1'},
        {u'OptionName': 'RollbackLaunchOnFailure',
         u'Namespace': 'aws:elasticbeanstalk:control', u'Value': 'false'},
        {u'OptionName': 'DefaultSSHPort',
         u'Namespace': 'aws:elasticbeanstalk:control', u'Value': '22'},
        {u'OptionName': 'LaunchType',
         u'Namespace': 'aws:elasticbeanstalk:control', u'Value': 'Migration'},
        {u'OptionName': 'Automatically Terminate Unhealthy Instances',
         u'Namespace': 'aws:elasticbeanstalk:monitoring', u'Value': 'true'},
        {u'OptionName': 'LaunchTimeout',
         u'Namespace': 'aws:elasticbeanstalk:control', u'Value': '0'},
        {u'OptionName': 'EnvironmentType',
         u'Namespace': 'aws:elasticbeanstalk:environment',
         u'Value': 'LoadBalanced'}, {u'OptionName': 'SSHSourceRestriction',
                                     u'Namespace': 'aws:autoscaling:launchconfiguration',
                                     u'Value': 'tcp,22,22,0.0.0.0/0'},
        {u'OptionName': 'Notification Topic ARN',
         u'Namespace': 'aws:elasticbeanstalk:sns:topics'},
        {u'OptionName': 'Notification Endpoint',
         u'Namespace': 'aws:elasticbeanstalk:sns:topics'},
        {u'OptionName': 'Timeout',
         u'Namespace': 'aws:elasticbeanstalk:command', u'Value': '480'},
        {u'OptionName': 'Application Healthcheck URL',
         u'Namespace': 'aws:elasticbeanstalk:application', u'Value': None},
        {u'OptionName': 'Notification Topic Name',
         u'Namespace': 'aws:elasticbeanstalk:sns:topics'},
        {u'OptionName': 'Notification Protocol',
         u'Namespace': 'aws:elasticbeanstalk:sns:topics', u'Value': 'email'}],
            u'DateUpdated': '2014-08-18T17:33:00Z'}


def get_expected_conversion():
    return {'ApplicationName': 'myEBCLItest',
            'EnvironmentName': 'myAwesomeEnv2', 'settings': {
        'aws:elasticbeanstalk:hostmanager': {'LogPublicationControl': 'false'},
        'aws:autoscaling:asg': {'MinSize': '1', 'Custom Availability Zones': None,
                                'Cooldown': '360', 'MaxSize': '4',
                                'Availability Zones': 'Any'},
        'aws:autoscaling:updatepolicy:rollingupdate': {'PauseTime': None,
                                                       'RollingUpdateEnabled': 'false',
                                                       'MaxBatchSize': None,
                                                       'MinInstancesInService': None},
        'aws:elasticbeanstalk:control': {'DefaultSSHPort': '22',
                                         'RollbackLaunchOnFailure': 'false',
                                         'LaunchType': 'Migration',
                                         'LaunchTimeout': '0'},
        'aws:elasticbeanstalk:application': {'Application Healthcheck URL': None},
        'aws:elasticbeanstalk:sns:topics': {'Notification Endpoint': None,
                                            'Notification Topic Name': None,
                                            'Notification Protocol': 'email',
                                            'Notification Topic ARN': None},
        'aws:autoscaling:launchconfiguration': {'BlockDeviceMappings': None,
                                                'SecurityGroups': 'awseb-e-y3vcqpgpfy-stack-AWSEBSecurityGroup-1S1L8EML44LY8',
                                                'SSHSourceRestriction': 'tcp,22,22,0.0.0.0/0',
                                                'MonitoringInterval': '5 minute',
                                                'IamInstanceProfile': None,
                                                'EC2KeyName': 'amazon',
                                                'InstanceType': 't1.micro',
                                                'ImageId': 'ami-043a5034'},
        'aws:elasticbeanstalk:application:environment': {'AWS_SECRET_KEY': None,
                                                         'PARAM5': None,
                                                         'PARAM4': None,
                                                         'PARAM3': None,
                                                         'PARAM2': None,
                                                         'PARAM1': None,
                                                         'JDBC_CONNECTION_STRING': None,
                                                         'AWS_ACCESS_KEY_ID': None},
        'aws:elasticbeanstalk:container:tomcat:jvmoptions': {'Xmx': '256m',
                                                             'XX:MaxPermSize': '64m',
                                                             'JVM Options': None,
                                                             'Xms': '256m'},
        'aws:cloudformation:template:parameter': {'InstancePort': '80',
                                                  'AppSource': 'http://elasticbeanstalk-samples-us-west-2.s3.amazonaws.com/elasticbeanstalk-sampleapp.war',
                                                  'JVMOptions': 'Xms=256m,Xmx=256m,XX:MaxPermSize=64m,JVM Options=',
                                                  'EnvironmentVariables': 'AWS_ACCESS_KEY_ID=,AWS_SECRET_KEY=,JDBC_CONNECTION_STRING=,PARAM1=,PARAM2=,PARAM3=,PARAM4=,PARAM5='},
        'aws:autoscaling:trigger': {'EvaluationPeriods': '1',
                                    'UpperBreachScaleIncrement': '1',
                                    'LowerThreshold': '2000000',
                                    'Statistic': 'Average',
                                    'LowerBreachScaleIncrement': '-1',
                                    'BreachDuration': '5',
                                    'MeasureName': 'NetworkOut',
                                    'UpperThreshold': '6000000', 'Period': '5',
                                    'Unit': 'Bytes'},
        'aws:elb:loadbalancer': {'LoadBalancerHTTPSPort': 'OFF',
                                 'LoadBalancerSSLPortProtocol': 'HTTPS',
                                 'CrossZone': 'false',
                                 'LoadBalancerHTTPPort': '80',
                                 'LoadBalancerPortProtocol': 'HTTP',
                                 'SSLCertificateId': None},
        'aws:elb:policies': {'ConnectionDrainingEnabled': 'false',
                             'Stickiness Cookie Expiration': '0',
                             'ConnectionDrainingTimeout': '20',
                             'Stickiness Policy': 'false'},
        'aws:ec2:vpc': {'ELBScheme': 'public', 'Subnets': None, 'VPCId': None,
                        'ELBSubnets': None, 'AssociatePublicIpAddress': None},
        'aws:elb:healthcheck': {'HealthyThreshold': '3', 'Interval': '30',
                                'Target': 'TCP:80', 'Timeout': '5',
                                'UnhealthyThreshold': '5'},
        'aws:elasticbeanstalk:environment': {'EnvironmentType': 'LoadBalanced'},
        'aws:elasticbeanstalk:monitoring': {
            'Automatically Terminate Unhealthy Instances': 'true'},
        'aws:elasticbeanstalk:command': {'Timeout': '480'}}}